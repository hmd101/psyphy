[build-system]
requires = ["hatchling>=1.18.0"]
build-backend = "hatchling.build"

[project]
name = "psyphy"
version = "0.1.0"
description = "Psychophysical modeling and adaptive trial placement"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
dependencies = [
  "jax==0.4.28",
  "optax==0.2.5",
  "numpy>=1.22",
]

[project.urls]
Homepage = "https://github.com/hmd101/psyphy"
Repository = "https://github.com/hmd101/psyphy"
Issues = "https://github.com/hmd101/psyphy/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/psyphy"]

[tool.hatch.build.targets.sdist]
include = ["src/psyphy", "README.md", "requirements.txt", "tests"]

# Ruff configuration
[tool.ruff]
line-length = 88
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort (import sorting)
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "SIM",   # flake8-simplify
    "NPY",   # NumPy-specific rules
]
ignore = [
    "E501",  # Line too long (handled by formatter)
    "ARG",   # Unused arguments (prototyping phase)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["ARG", "S101"]  # Allow unused args and asserts in tests
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"docs/**/*.py" = ["ARG", "T201"]  # Allow print statements in examples

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

# mypy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = false  # Disabled for JAX compatibility
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
files = ["src/psyphy", "tests"]
exclude = [
    "^build/",
    "^dist/",
    "^\\.venv/",
]

# Ignore third-party packages that have compatibility issues
[[tool.mypy.overrides]]
module = [
    "jax.*",
    "jaxlib.*",
    "optax.*",
]
ignore_errors = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
